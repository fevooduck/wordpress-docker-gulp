!function(t){wp.customize("blogname",function(e){e.bind(function(e){t(".site-title a").text(e)})}),wp.customize("blogdescription",function(e){e.bind(function(e){t(".site-description").text(e)})}),wp.customize("header_textcolor",function(e){e.bind(function(e){"blank"===e?t(".site-title, .site-description").css({clip:"rect(1px, 1px, 1px, 1px)",position:"absolute"}):(t(".site-title, .site-description").css({clip:"auto",position:"relative"}),t(".site-title a, .site-description").css({color:e}))})})}(jQuery),function(){var a,e,t,n,s,i;if((a=document.getElementById("site-navigation"))&&void 0!==(e=a.getElementsByTagName("button")[0]))if(void 0!==(t=a.getElementsByTagName("ul")[0])){for(t.setAttribute("aria-expanded","false"),-1===t.className.indexOf("nav-menu")&&(t.className+=" nav-menu"),e.onclick=function(){-1!==a.className.indexOf("toggled")?(a.className=a.className.replace(" toggled",""),e.setAttribute("aria-expanded","false"),t.setAttribute("aria-expanded","false")):(a.className+=" toggled",e.setAttribute("aria-expanded","true"),t.setAttribute("aria-expanded","true"))},s=0,i=(n=t.getElementsByTagName("a")).length;s<i;s++)n[s].addEventListener("focus",o,!0),n[s].addEventListener("blur",o,!0);!function(){var e,t,n=a.querySelectorAll(".menu-item-has-children > a, .page_item_has_children > a");if("ontouchstart"in window)for(e=function(e){var t,n=this.parentNode;if(n.classList.contains("focus"))n.classList.remove("focus");else{for(e.preventDefault(),t=0;t<n.parentNode.children.length;++t)n!==n.parentNode.children[t]&&n.parentNode.children[t].classList.remove("focus");n.classList.add("focus")}},t=0;t<n.length;++t)n[t].addEventListener("touchstart",e,!1)}()}else e.style.display="none";function o(){for(var e=this;-1===e.className.indexOf("nav-menu");)"li"===e.tagName.toLowerCase()&&(-1!==e.className.indexOf("focus")?e.className=e.className.replace(" focus",""):e.className+=" focus"),e=e.parentElement}}(),/(trident|msie)/i.test(navigator.userAgent)&&document.getElementById&&window.addEventListener&&window.addEventListener("hashchange",function(){var e,t=location.hash.substring(1);/^[A-z0-9_-]+$/.test(t)&&(e=document.getElementById(t))&&(/^(?:a|select|input|button|textarea)$/i.test(e.tagName)||(e.tabIndex=-1),e.focus())},!1);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN1dGhhbi9zcmMvanMvY3VzdG9taXplci5qcyIsInN1dGhhbi9zcmMvanMvbmF2aWdhdGlvbi5qcyIsInN1dGhhbi9zcmMvanMvc2tpcC1saW5rLWZvY3VzLWZpeC5qcyJdLCJuYW1lcyI6WyIkIiwid3AiLCJjdXN0b21pemUiLCJ2YWx1ZSIsImJpbmQiLCJ0byIsInRleHQiLCJjc3MiLCJjbGlwIiwicG9zaXRpb24iLCJjb2xvciIsImpRdWVyeSIsImNvbnRhaW5lciIsImJ1dHRvbiIsIm1lbnUiLCJsaW5rcyIsImkiLCJsZW4iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJzZXRBdHRyaWJ1dGUiLCJjbGFzc05hbWUiLCJpbmRleE9mIiwib25jbGljayIsInJlcGxhY2UiLCJsZW5ndGgiLCJhZGRFdmVudExpc3RlbmVyIiwidG9nZ2xlRm9jdXMiLCJ0b3VjaFN0YXJ0Rm4iLCJwYXJlbnRMaW5rIiwicXVlcnlTZWxlY3RvckFsbCIsIndpbmRvdyIsImUiLCJtZW51SXRlbSIsInRoaXMiLCJwYXJlbnROb2RlIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJyZW1vdmUiLCJwcmV2ZW50RGVmYXVsdCIsImNoaWxkcmVuIiwiYWRkIiwic3R5bGUiLCJkaXNwbGF5Iiwic2VsZiIsInRhZ05hbWUiLCJ0b0xvd2VyQ2FzZSIsInBhcmVudEVsZW1lbnQiLCJ0ZXN0IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiZWxlbWVudCIsImlkIiwibG9jYXRpb24iLCJoYXNoIiwic3Vic3RyaW5nIiwidGFiSW5kZXgiLCJmb2N1cyJdLCJtYXBwaW5ncyI6IkNBUUEsU0FBQUEsR0FHQUMsR0FBQUMsVUFBQSxXQUFBLFNBQUFDLEdBQ0FBLEVBQUFDLEtBQUEsU0FBQUMsR0FDQUwsRUFBQSxpQkFBQU0sS0FBQUQsT0FHQUosR0FBQUMsVUFBQSxrQkFBQSxTQUFBQyxHQUNBQSxFQUFBQyxLQUFBLFNBQUFDLEdBQ0FMLEVBQUEscUJBQUFNLEtBQUFELE9BS0FKLEdBQUFDLFVBQUEsbUJBQUEsU0FBQUMsR0FDQUEsRUFBQUMsS0FBQSxTQUFBQyxHQUNBLFVBQUFBLEVBQ0FMLEVBQUEsa0NBQUFPLElBQUEsQ0FDQUMsS0FBQSwyQkFDQUMsU0FBQSxjQUdBVCxFQUFBLGtDQUFBTyxJQUFBLENBQ0FDLEtBQUEsT0FDQUMsU0FBQSxhQUVBVCxFQUFBLG9DQUFBTyxJQUFBLENBQ0FHLE1BQUFMLFNBNUJBLENBaUNBTSxRQ25DQSxXQUNBLElBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBR0EsSUFEQUwsRUFBQU0sU0FBQUMsZUFBQSwwQkFNQSxLQURBTixFQUFBRCxFQUFBUSxxQkFBQSxVQUFBLElBUUEsUUFBQSxLQUhBTixFQUFBRixFQUFBUSxxQkFBQSxNQUFBLElBR0EsQ0EwQkEsSUFyQkFOLEVBQUFPLGFBQUEsZ0JBQUEsVUFDQSxJQUFBUCxFQUFBUSxVQUFBQyxRQUFBLGNBQ0FULEVBQUFRLFdBQUEsYUFHQVQsRUFBQVcsUUFBQSxZQUNBLElBQUFaLEVBQUFVLFVBQUFDLFFBQUEsWUFDQVgsRUFBQVUsVUFBQVYsRUFBQVUsVUFBQUcsUUFBQSxXQUFBLElBQ0FaLEVBQUFRLGFBQUEsZ0JBQUEsU0FDQVAsRUFBQU8sYUFBQSxnQkFBQSxXQUVBVCxFQUFBVSxXQUFBLFdBQ0FULEVBQUFRLGFBQUEsZ0JBQUEsUUFDQVAsRUFBQU8sYUFBQSxnQkFBQSxVQVFBTCxFQUFBLEVBQUFDLEdBSEFGLEVBQUFELEVBQUFNLHFCQUFBLE1BR0FNLE9BQUFWLEVBQUFDLEVBQUFELElBQ0FELEVBQUFDLEdBQUFXLGlCQUFBLFFBQUFDLEdBQUEsR0FDQWIsRUFBQUMsR0FBQVcsaUJBQUEsT0FBQUMsR0FBQSxJQTRCQSxXQUNBLElBQUFDLEVBQUFiLEVBQ0FjLEVBd0JBbEIsRUF4QkFtQixpQkFBQSw0REFFQSxHQUFBLGlCQUFBQyxPQWtCQSxJQWpCQUgsRUFBQSxTQUFBSSxHQUNBLElBQUFqQixFQUFBa0IsRUFBQUMsS0FBQUMsV0FFQSxHQUFBRixFQUFBRyxVQUFBQyxTQUFBLFNBVUFKLEVBQUFHLFVBQUFFLE9BQUEsYUFWQSxDQUVBLElBREFOLEVBQUFPLGlCQUNBeEIsRUFBQSxFQUFBQSxFQUFBa0IsRUFBQUUsV0FBQUssU0FBQWYsU0FBQVYsRUFDQWtCLElBQUFBLEVBQUFFLFdBQUFLLFNBQUF6QixJQUdBa0IsRUFBQUUsV0FBQUssU0FBQXpCLEdBQUFxQixVQUFBRSxPQUFBLFNBRUFMLEVBQUFHLFVBQUFLLElBQUEsV0FNQTFCLEVBQUEsRUFBQUEsRUFBQWMsRUFBQUosU0FBQVYsRUFDQWMsRUFBQWQsR0FBQVcsaUJBQUEsYUFBQUUsR0FBQSxHQXZCQSxRQXZEQWhCLEVBQUE4QixNQUFBQyxRQUFBLE9BaUNBLFNBQUFoQixJQUlBLElBSEEsSUFBQWlCLEVBQUFWLE1BR0EsSUFBQVUsRUFBQXZCLFVBQUFDLFFBQUEsYUFHQSxPQUFBc0IsRUFBQUMsUUFBQUMsaUJBQ0EsSUFBQUYsRUFBQXZCLFVBQUFDLFFBQUEsU0FDQXNCLEVBQUF2QixVQUFBdUIsRUFBQXZCLFVBQUFHLFFBQUEsU0FBQSxJQUVBb0IsRUFBQXZCLFdBQUEsVUFJQXVCLEVBQUFBLEVBQUFHLGVBakVBLEdDRUEsa0JBQUFDLEtBQUFDLFVBQUFDLFlBRUFqQyxTQUFBQyxnQkFBQWEsT0FBQUwsa0JBQ0FLLE9BQUFMLGlCQUFBLGFBQUEsV0FDQSxJQUNBeUIsRUFEQUMsRUFBQUMsU0FBQUMsS0FBQUMsVUFBQSxHQUdBLGdCQUFBUCxLQUFBSSxLQUlBRCxFQUFBbEMsU0FBQUMsZUFBQWtDLE1BR0Esd0NBQUFKLEtBQUFHLEVBQUFOLFdBQ0FNLEVBQUFLLFVBQUEsR0FHQUwsRUFBQU0sV0FFQSIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRmlsZSBjdXN0b21pemVyLmpzLlxuICpcbiAqIFRoZW1lIEN1c3RvbWl6ZXIgZW5oYW5jZW1lbnRzIGZvciBhIGJldHRlciB1c2VyIGV4cGVyaWVuY2UuXG4gKlxuICogQ29udGFpbnMgaGFuZGxlcnMgdG8gbWFrZSBUaGVtZSBDdXN0b21pemVyIHByZXZpZXcgcmVsb2FkIGNoYW5nZXMgYXN5bmNocm9ub3VzbHkuXG4gKi9cblxuKCBmdW5jdGlvbiggJCApIHtcblxuXHQvLyBTaXRlIHRpdGxlIGFuZCBkZXNjcmlwdGlvbi5cblx0d3AuY3VzdG9taXplKCAnYmxvZ25hbWUnLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFsdWUuYmluZCggZnVuY3Rpb24oIHRvICkge1xuXHRcdFx0JCggJy5zaXRlLXRpdGxlIGEnICkudGV4dCggdG8gKTtcblx0XHR9ICk7XG5cdH0gKTtcblx0d3AuY3VzdG9taXplKCAnYmxvZ2Rlc2NyaXB0aW9uJywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhbHVlLmJpbmQoIGZ1bmN0aW9uKCB0byApIHtcblx0XHRcdCQoICcuc2l0ZS1kZXNjcmlwdGlvbicgKS50ZXh0KCB0byApO1xuXHRcdH0gKTtcblx0fSApO1xuXG5cdC8vIEhlYWRlciB0ZXh0IGNvbG9yLlxuXHR3cC5jdXN0b21pemUoICdoZWFkZXJfdGV4dGNvbG9yJywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhbHVlLmJpbmQoIGZ1bmN0aW9uKCB0byApIHtcblx0XHRcdGlmICggJ2JsYW5rJyA9PT0gdG8gKSB7XG5cdFx0XHRcdCQoICcuc2l0ZS10aXRsZSwgLnNpdGUtZGVzY3JpcHRpb24nICkuY3NzKCB7XG5cdFx0XHRcdFx0J2NsaXAnOiAncmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpJyxcblx0XHRcdFx0XHQncG9zaXRpb24nOiAnYWJzb2x1dGUnXG5cdFx0XHRcdH0gKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdCQoICcuc2l0ZS10aXRsZSwgLnNpdGUtZGVzY3JpcHRpb24nICkuY3NzKCB7XG5cdFx0XHRcdFx0J2NsaXAnOiAnYXV0bycsXG5cdFx0XHRcdFx0J3Bvc2l0aW9uJzogJ3JlbGF0aXZlJ1xuXHRcdFx0XHR9ICk7XG5cdFx0XHRcdCQoICcuc2l0ZS10aXRsZSBhLCAuc2l0ZS1kZXNjcmlwdGlvbicgKS5jc3MoIHtcblx0XHRcdFx0XHQnY29sb3InOiB0b1xuXHRcdFx0XHR9ICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9ICk7XG59ICkoIGpRdWVyeSApO1xuIiwiLyoqXG4gKiBGaWxlIG5hdmlnYXRpb24uanMuXG4gKlxuICogSGFuZGxlcyB0b2dnbGluZyB0aGUgbmF2aWdhdGlvbiBtZW51IGZvciBzbWFsbCBzY3JlZW5zIGFuZCBlbmFibGVzIFRBQiBrZXlcbiAqIG5hdmlnYXRpb24gc3VwcG9ydCBmb3IgZHJvcGRvd24gbWVudXMuXG4gKi9cbiggZnVuY3Rpb24oKSB7XG5cdHZhciBjb250YWluZXIsIGJ1dHRvbiwgbWVudSwgbGlua3MsIGksIGxlbjtcblxuXHRjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggJ3NpdGUtbmF2aWdhdGlvbicgKTtcblx0aWYgKCAhIGNvbnRhaW5lciApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHRidXR0b24gPSBjb250YWluZXIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoICdidXR0b24nIClbMF07XG5cdGlmICggJ3VuZGVmaW5lZCcgPT09IHR5cGVvZiBidXR0b24gKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0bWVudSA9IGNvbnRhaW5lci5nZXRFbGVtZW50c0J5VGFnTmFtZSggJ3VsJyApWzBdO1xuXG5cdC8vIEhpZGUgbWVudSB0b2dnbGUgYnV0dG9uIGlmIG1lbnUgaXMgZW1wdHkgYW5kIHJldHVybiBlYXJseS5cblx0aWYgKCAndW5kZWZpbmVkJyA9PT0gdHlwZW9mIG1lbnUgKSB7XG5cdFx0YnV0dG9uLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0bWVudS5zZXRBdHRyaWJ1dGUoICdhcmlhLWV4cGFuZGVkJywgJ2ZhbHNlJyApO1xuXHRpZiAoIC0xID09PSBtZW51LmNsYXNzTmFtZS5pbmRleE9mKCAnbmF2LW1lbnUnICkgKSB7XG5cdFx0bWVudS5jbGFzc05hbWUgKz0gJyBuYXYtbWVudSc7XG5cdH1cblxuXHRidXR0b24ub25jbGljayA9IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggLTEgIT09IGNvbnRhaW5lci5jbGFzc05hbWUuaW5kZXhPZiggJ3RvZ2dsZWQnICkgKSB7XG5cdFx0XHRjb250YWluZXIuY2xhc3NOYW1lID0gY29udGFpbmVyLmNsYXNzTmFtZS5yZXBsYWNlKCAnIHRvZ2dsZWQnLCAnJyApO1xuXHRcdFx0YnV0dG9uLnNldEF0dHJpYnV0ZSggJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnICk7XG5cdFx0XHRtZW51LnNldEF0dHJpYnV0ZSggJ2FyaWEtZXhwYW5kZWQnLCAnZmFsc2UnICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbnRhaW5lci5jbGFzc05hbWUgKz0gJyB0b2dnbGVkJztcblx0XHRcdGJ1dHRvbi5zZXRBdHRyaWJ1dGUoICdhcmlhLWV4cGFuZGVkJywgJ3RydWUnICk7XG5cdFx0XHRtZW51LnNldEF0dHJpYnV0ZSggJ2FyaWEtZXhwYW5kZWQnLCAndHJ1ZScgKTtcblx0XHR9XG5cdH07XG5cblx0Ly8gR2V0IGFsbCB0aGUgbGluayBlbGVtZW50cyB3aXRoaW4gdGhlIG1lbnUuXG5cdGxpbmtzICAgID0gbWVudS5nZXRFbGVtZW50c0J5VGFnTmFtZSggJ2EnICk7XG5cblx0Ly8gRWFjaCB0aW1lIGEgbWVudSBsaW5rIGlzIGZvY3VzZWQgb3IgYmx1cnJlZCwgdG9nZ2xlIGZvY3VzLlxuXHRmb3IgKCBpID0gMCwgbGVuID0gbGlua3MubGVuZ3RoOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0bGlua3NbaV0uYWRkRXZlbnRMaXN0ZW5lciggJ2ZvY3VzJywgdG9nZ2xlRm9jdXMsIHRydWUgKTtcblx0XHRsaW5rc1tpXS5hZGRFdmVudExpc3RlbmVyKCAnYmx1cicsIHRvZ2dsZUZvY3VzLCB0cnVlICk7XG5cdH1cblxuXHQvKipcblx0ICogU2V0cyBvciByZW1vdmVzIC5mb2N1cyBjbGFzcyBvbiBhbiBlbGVtZW50LlxuXHQgKi9cblx0ZnVuY3Rpb24gdG9nZ2xlRm9jdXMoKSB7XG5cdFx0dmFyIHNlbGYgPSB0aGlzO1xuXG5cdFx0Ly8gTW92ZSB1cCB0aHJvdWdoIHRoZSBhbmNlc3RvcnMgb2YgdGhlIGN1cnJlbnQgbGluayB1bnRpbCB3ZSBoaXQgLm5hdi1tZW51LlxuXHRcdHdoaWxlICggLTEgPT09IHNlbGYuY2xhc3NOYW1lLmluZGV4T2YoICduYXYtbWVudScgKSApIHtcblxuXHRcdFx0Ly8gT24gbGkgZWxlbWVudHMgdG9nZ2xlIHRoZSBjbGFzcyAuZm9jdXMuXG5cdFx0XHRpZiAoICdsaScgPT09IHNlbGYudGFnTmFtZS50b0xvd2VyQ2FzZSgpICkge1xuXHRcdFx0XHRpZiAoIC0xICE9PSBzZWxmLmNsYXNzTmFtZS5pbmRleE9mKCAnZm9jdXMnICkgKSB7XG5cdFx0XHRcdFx0c2VsZi5jbGFzc05hbWUgPSBzZWxmLmNsYXNzTmFtZS5yZXBsYWNlKCAnIGZvY3VzJywgJycgKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzZWxmLmNsYXNzTmFtZSArPSAnIGZvY3VzJztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRzZWxmID0gc2VsZi5wYXJlbnRFbGVtZW50O1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBUb2dnbGVzIGBmb2N1c2AgY2xhc3MgdG8gYWxsb3cgc3VibWVudSBhY2Nlc3Mgb24gdGFibGV0cy5cblx0ICovXG5cdCggZnVuY3Rpb24oIGNvbnRhaW5lciApIHtcblx0XHR2YXIgdG91Y2hTdGFydEZuLCBpLFxuXHRcdFx0cGFyZW50TGluayA9IGNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCAnLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW4gPiBhLCAucGFnZV9pdGVtX2hhc19jaGlsZHJlbiA+IGEnICk7XG5cblx0XHRpZiAoICdvbnRvdWNoc3RhcnQnIGluIHdpbmRvdyApIHtcblx0XHRcdHRvdWNoU3RhcnRGbiA9IGZ1bmN0aW9uKCBlICkge1xuXHRcdFx0XHR2YXIgbWVudUl0ZW0gPSB0aGlzLnBhcmVudE5vZGUsIGk7XG5cblx0XHRcdFx0aWYgKCAhIG1lbnVJdGVtLmNsYXNzTGlzdC5jb250YWlucyggJ2ZvY3VzJyApICkge1xuXHRcdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IG1lbnVJdGVtLnBhcmVudE5vZGUuY2hpbGRyZW4ubGVuZ3RoOyArK2kgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIG1lbnVJdGVtID09PSBtZW51SXRlbS5wYXJlbnROb2RlLmNoaWxkcmVuW2ldICkge1xuXHRcdFx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdG1lbnVJdGVtLnBhcmVudE5vZGUuY2hpbGRyZW5baV0uY2xhc3NMaXN0LnJlbW92ZSggJ2ZvY3VzJyApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRtZW51SXRlbS5jbGFzc0xpc3QuYWRkKCAnZm9jdXMnICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0bWVudUl0ZW0uY2xhc3NMaXN0LnJlbW92ZSggJ2ZvY3VzJyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHRmb3IgKCBpID0gMDsgaSA8IHBhcmVudExpbmsubGVuZ3RoOyArK2kgKSB7XG5cdFx0XHRcdHBhcmVudExpbmtbaV0uYWRkRXZlbnRMaXN0ZW5lciggJ3RvdWNoc3RhcnQnLCB0b3VjaFN0YXJ0Rm4sIGZhbHNlICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9KCBjb250YWluZXIgKSApO1xufSApKCk7XG4iLCIvKipcbiAqIEZpbGUgc2tpcC1saW5rLWZvY3VzLWZpeC5qcy5cbiAqXG4gKiBIZWxwcyB3aXRoIGFjY2Vzc2liaWxpdHkgZm9yIGtleWJvYXJkIG9ubHkgdXNlcnMuXG4gKlxuICogTGVhcm4gbW9yZTogaHR0cHM6Ly9naXQuaW8vdldkcjJcbiAqL1xuKCBmdW5jdGlvbigpIHtcblx0dmFyIGlzSWUgPSAvKHRyaWRlbnR8bXNpZSkvaS50ZXN0KCBuYXZpZ2F0b3IudXNlckFnZW50ICk7XG5cblx0aWYgKCBpc0llICYmIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyICkge1xuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCAnaGFzaGNoYW5nZScsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGlkID0gbG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoIDEgKSxcblx0XHRcdFx0ZWxlbWVudDtcblxuXHRcdFx0aWYgKCAhICggL15bQS16MC05Xy1dKyQvLnRlc3QoIGlkICkgKSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRlbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIGlkICk7XG5cblx0XHRcdGlmICggZWxlbWVudCApIHtcblx0XHRcdFx0aWYgKCAhICggL14oPzphfHNlbGVjdHxpbnB1dHxidXR0b258dGV4dGFyZWEpJC9pLnRlc3QoIGVsZW1lbnQudGFnTmFtZSApICkgKSB7XG5cdFx0XHRcdFx0ZWxlbWVudC50YWJJbmRleCA9IC0xO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZWxlbWVudC5mb2N1cygpO1xuXHRcdFx0fVxuXHRcdH0sIGZhbHNlICk7XG5cdH1cbn0gKSgpO1xuIl19